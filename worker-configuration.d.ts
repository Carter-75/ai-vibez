/* eslint-disable */
// Generated by Wrangler by running `wrangler types --include-runtime false` (hash: b53d5fa7e558a17eca4391e78640f9c7)
declare namespace Cloudflare {
	interface GlobalProps {
		mainModule: typeof import("./worker/index");
		durableNamespaces: "CodeGeneratorAgent" | "UserAppSandboxService" | "DORateLimitStore";
	}
	interface Env {
		VibecoderStore: KVNamespace;
		TEMPLATES_REPOSITORY: "https://github.com/cloudflare/ai-vibez";
		ALLOWED_EMAIL: "cartermoyer75@gmail.com";
		CLOUDFLARE_AI_GATEWAY: "ai-vibez-gateway";
		MAX_SANDBOX_INSTANCES: "10";
		SANDBOX_INSTANCE_TYPE: "standard";
		CUSTOM_DOMAIN: string;
		CUSTOM_PREVIEW_DOMAIN: string;
		ENVIRONMENT: string;
		ENABLE_EMAIL_WHITELIST: string;
		DISABLE_EMAIL_AUTH: string;
		ALLOCATION_STRATEGY: string;
		// API Keys
		ANTHROPIC_API_KEY: string;
		OPENAI_API_KEY: string;
		GOOGLE_AI_STUDIO_API_KEY: string;
		OPENROUTER_API_KEY: string;
		CEREBRAS_API_KEY: string;
		GROQ_API_KEY: string;
		SERPAPI_KEY: string;
		// Cloudflare API
		CLOUDFLARE_API_TOKEN: string;
		CLOUDFLARE_ACCOUNT_ID: string;
		CLOUDFLARE_AI_GATEWAY_URL: string;
		CLOUDFLARE_AI_GATEWAY_TOKEN: string;
		// OAuth Providers
		GOOGLE_CLIENT_ID: string;
		GOOGLE_CLIENT_SECRET: string;
		GITHUB_CLIENT_ID: string;
		GITHUB_CLIENT_SECRET: string;
		GITHUB_EXPORTER_CLIENT_ID: string;
		GITHUB_EXPORTER_CLIENT_SECRET: string;
		// Security & Secrets
		JWT_SECRET: string;
		WEBHOOK_SECRET: string;
		ENTROPY_KEY: string;
		SECRETS_ENCRYPTION_KEY: string;
		// Sandbox Service
		SANDBOX_SERVICE_API_KEY: string;
		SANDBOX_SERVICE_TYPE: string;
		SANDBOX_SERVICE_URL: string;
		// Sentry & Monitoring
		SENTRY_DSN: string;
		CF_ACCESS_ID: string;
		CF_ACCESS_SECRET: string;
		// Dispatcher
		DISPATCHER: DispatchNamespace;
		CodeGenObject: DurableObjectNamespace<import("./worker/index").CodeGeneratorAgent>;
		Sandbox: DurableObjectNamespace<import("./worker/index").UserAppSandboxService>;
		DORateLimitStore: DurableObjectNamespace<import("./worker/index").DORateLimitStore>;
		TEMPLATES_BUCKET: R2Bucket;
		DB: D1Database;
		API_RATE_LIMITER: RateLimit;
		AUTH_RATE_LIMITER: RateLimit;
		AI: Ai;
		IMAGES: ImagesBinding;
		CF_VERSION_METADATA: WorkerVersionMetadata;
		ASSETS: Fetcher;
	}
}
interface Env extends Cloudflare.Env {}
type StringifyValues<EnvType extends Record<string, unknown>> = {
	[Binding in keyof EnvType]: EnvType[Binding] extends string ? EnvType[Binding] : string;
};
declare namespace NodeJS {
	interface ProcessEnv extends StringifyValues<Pick<Cloudflare.Env, "TEMPLATES_REPOSITORY" | "ALLOWED_EMAIL" | "CLOUDFLARE_AI_GATEWAY" | "MAX_SANDBOX_INSTANCES" | "SANDBOX_INSTANCE_TYPE" | "CUSTOM_DOMAIN" | "ENVIRONMENT" | "ENABLE_EMAIL_WHITELIST" | "DISABLE_EMAIL_AUTH" | "GOOGLE_AI_STUDIO_API_KEY" | "JWT_SECRET" | "WEBHOOK_SECRET">> {}
}
