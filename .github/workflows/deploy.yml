name: Deploy AI Vibez to Cloudflare

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - run: npm install
      
      - run: npm run build
        env:
          NODE_OPTIONS: '--max-old-space-size=8192'
          
      # Set up authentication for wrangler commands
      - name: Setup Cloudflare credentials
        run: |
          echo "Setting up Cloudflare authentication..."
          echo "CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}" >> $GITHUB_ENV
          echo "CLOUDFLARE_ACCOUNT_ID=${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" >> $GITHUB_ENV
          
      # Debug Cloudflare setup
      - name: Debug Cloudflare setup
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "üîç Debugging Cloudflare setup..."
          echo "Account ID (first 8 chars): $(echo $CLOUDFLARE_ACCOUNT_ID | cut -c1-8)..."
          echo "API Token (first 8 chars): $(echo $CLOUDFLARE_API_TOKEN | cut -c1-8)..."
          echo "Wrangler version: $(npx wrangler --version)"
          echo "Testing wrangler authentication..."
          npx wrangler whoami || echo "Authentication test failed"
          
      # Clean up Pages-related files that confuse wrangler
      - name: Clean up Pages detection files
        run: |
          echo "üßπ Cleaning up files that cause Pages detection..."
          rm -f dist/_routes.json
          rm -rf functions/
          echo "Files removed. This should be detected as a Workers project now."
          
      # Ensure D1 database exists and run migrations
      - name: Setup D1 database and run migrations
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "Setting up D1 database..."
          
          # List all databases to check what's available
          echo "üìã Listing all D1 databases..."
          npx wrangler d1 list || echo "Failed to list databases"
          
          # Try to run migrations by database name first
          echo "üîÑ Attempting to apply migrations to ai-vibez-d1 by name..."
          if npx wrangler d1 migrations apply ai-vibez-d1 --remote; then
            echo "‚úÖ Migrations applied successfully via database name"
          else
            echo "‚ö†Ô∏è  Migration by name failed, trying by database ID..."
            # Try by database ID from wrangler.toml
            if npx wrangler d1 migrations apply --database-id=88c494f1-1236-4ce4-8b60-570776559000 --remote; then
              echo "‚úÖ Migrations applied successfully via database ID"
            else
              echo "‚ö†Ô∏è  Both migration attempts failed"
              echo "This might mean:"
              echo "1. Database doesn't exist yet - create it in Cloudflare Dashboard"
              echo "2. Migrations already applied"
              echo "3. Permission issues"
              echo "Continuing with deployment anyway..."
            fi
          fi
          
      # Deploy the Workers application (not Pages!)
      - uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --config wrangler.toml
          
      # Set up Workers secrets (not Pages secrets!)
      - name: Setup Workers secrets
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "Setting up Workers secrets..."
          
          # Set each secret for Workers project (not Pages)
          echo "üîë Setting GOOGLE_AI_STUDIO_API_KEY..."
          echo "${{ secrets.GOOGLE_AI_STUDIO_API_KEY }}" | npx wrangler secret put GOOGLE_AI_STUDIO_API_KEY --name ai-vibez || echo "‚ö†Ô∏è Failed to set GOOGLE_AI_STUDIO_API_KEY"
          
          echo "üîë Setting CLOUDFLARE_AI_GATEWAY_TOKEN..."
          echo "${{ secrets.CLOUDFLARE_AI_GATEWAY_TOKEN }}" | npx wrangler secret put CLOUDFLARE_AI_GATEWAY_TOKEN --name ai-vibez || echo "‚ö†Ô∏è Failed to set CLOUDFLARE_AI_GATEWAY_TOKEN"
          
          echo "üîë Setting JWT_SECRET..."
          echo "${{ secrets.JWT_SECRET }}" | npx wrangler secret put JWT_SECRET --name ai-vibez || echo "‚ö†Ô∏è Failed to set JWT_SECRET"
          
          echo "üîë Setting WEBHOOK_SECRET..."
          echo "${{ secrets.WEBHOOK_SECRET }}" | npx wrangler secret put WEBHOOK_SECRET --name ai-vibez || echo "‚ö†Ô∏è Failed to set WEBHOOK_SECRET"
          
          echo "üîë Setting SECRETS_ENCRYPTION_KEY..."
          echo "${{ secrets.SECRETS_ENCRYPTION_KEY }}" | npx wrangler secret put SECRETS_ENCRYPTION_KEY --name ai-vibez || echo "‚ö†Ô∏è Failed to set SECRETS_ENCRYPTION_KEY"
          
          echo "üîë Setting GOOGLE_CLIENT_ID..."
          echo "${{ secrets.GOOGLE_CLIENT_ID }}" | npx wrangler secret put GOOGLE_CLIENT_ID --name ai-vibez || echo "‚ö†Ô∏è Failed to set GOOGLE_CLIENT_ID"
          
          echo "üîë Setting GOOGLE_CLIENT_SECRET..."
          echo "${{ secrets.GOOGLE_CLIENT_SECRET }}" | npx wrangler secret put GOOGLE_CLIENT_SECRET --name ai-vibez || echo "‚ö†Ô∏è Failed to set GOOGLE_CLIENT_SECRET"
          
          echo "‚úÖ Workers secret setup completed"
