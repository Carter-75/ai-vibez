name: Deploy AI Vibez to Cloudflare (DEBUG MODE)

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - run: npm install
      
      - run: npm run build
        env:
          NODE_OPTIONS: '--max-old-space-size=8192'
          
      # ⚠️ TEMPORARY: Show all secrets for debugging
      - name: 🚨 DEBUG - Show all secrets (REMOVE AFTER TESTING)
        run: |
          echo "🔍 FULL SECRET DEBUG (TEMPORARY - WILL HIDE AFTER):"
          echo "================================"
          echo "CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}"
          echo "CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"
          echo "GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}"
          echo "GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}"
          echo "JWT_SECRET: ${{ secrets.JWT_SECRET }}"
          echo "GOOGLE_AI_STUDIO_API_KEY: ${{ secrets.GOOGLE_AI_STUDIO_API_KEY }}"
          echo "CLOUDFLARE_AI_GATEWAY_TOKEN: ${{ secrets.CLOUDFLARE_AI_GATEWAY_TOKEN }}"
          echo "SECRETS_ENCRYPTION_KEY: ${{ secrets.SECRETS_ENCRYPTION_KEY }}"
          echo "WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}"
          echo "================================"
          echo "Secret lengths:"
          echo "CLOUDFLARE_API_TOKEN length: ${#CLOUDFLARE_API_TOKEN}"
          echo "GOOGLE_CLIENT_ID length: ${#GOOGLE_CLIENT_ID}"
          echo "GOOGLE_CLIENT_SECRET length: ${#GOOGLE_CLIENT_SECRET}"
          echo "JWT_SECRET length: ${#JWT_SECRET}"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          GOOGLE_AI_STUDIO_API_KEY: ${{ secrets.GOOGLE_AI_STUDIO_API_KEY }}
          CLOUDFLARE_AI_GATEWAY_TOKEN: ${{ secrets.CLOUDFLARE_AI_GATEWAY_TOKEN }}
          SECRETS_ENCRYPTION_KEY: ${{ secrets.SECRETS_ENCRYPTION_KEY }}
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
          
      # Set up authentication for wrangler commands
      - name: Setup Cloudflare credentials
        run: |
          echo "Setting up Cloudflare authentication..."
          echo "CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}" >> $GITHUB_ENV
          echo "CLOUDFLARE_ACCOUNT_ID=${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" >> $GITHUB_ENV
          
      # Clean up Pages detection files
      - name: Clean up Pages detection files
        run: |
          echo "🧹 Cleaning up files that cause Pages detection..."
          rm -f dist/_routes.json
          rm -rf functions/
          echo "Files removed."
          
      # Deploy the application
      - uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --config wrangler.toml
          
      # Try to set secrets manually in Cloudflare
      - name: Manual secret setup via wrangler
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "🔧 Attempting to set secrets directly in Cloudflare..."
          
          # Only set secrets that exist
          if [ -n "${{ secrets.GOOGLE_CLIENT_ID }}" ]; then
            echo "Setting GOOGLE_CLIENT_ID..."
            echo "${{ secrets.GOOGLE_CLIENT_ID }}" | npx wrangler secret put GOOGLE_CLIENT_ID || echo "Failed"
          else
            echo "GOOGLE_CLIENT_ID not set in GitHub secrets"
          fi
          
          if [ -n "${{ secrets.GOOGLE_CLIENT_SECRET }}" ]; then
            echo "Setting GOOGLE_CLIENT_SECRET..."
            echo "${{ secrets.GOOGLE_CLIENT_SECRET }}" | npx wrangler secret put GOOGLE_CLIENT_SECRET || echo "Failed"
          else
            echo "GOOGLE_CLIENT_SECRET not set in GitHub secrets"
          fi
          
          if [ -n "${{ secrets.JWT_SECRET }}" ]; then
            echo "Setting JWT_SECRET..."
            echo "${{ secrets.JWT_SECRET }}" | npx wrangler secret put JWT_SECRET || echo "Failed"
          else
            echo "JWT_SECRET not set in GitHub secrets - GENERATING ONE..."
            JWT_GENERATED=$(openssl rand -hex 32)
            echo "Generated JWT_SECRET: $JWT_GENERATED"
            echo "$JWT_GENERATED" | npx wrangler secret put JWT_SECRET || echo "Failed to set generated JWT"
          fi
          
          if [ -n "${{ secrets.GOOGLE_AI_STUDIO_API_KEY }}" ]; then
            echo "Setting GOOGLE_AI_STUDIO_API_KEY..."
            echo "${{ secrets.GOOGLE_AI_STUDIO_API_KEY }}" | npx wrangler secret put GOOGLE_AI_STUDIO_API_KEY || echo "Failed"
          else
            echo "GOOGLE_AI_STUDIO_API_KEY not set in GitHub secrets"
          fi
          
          echo "✅ Secret setup attempt completed"
